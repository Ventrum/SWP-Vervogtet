// <auto-generated />
using System;
using Autovermietung.models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Autovermietung.Migrations
{
    [DbContext(typeof(DBManager))]
    [Migration("20221129202846_removed price")]
    partial class removedprice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AdditionalBill", b =>
                {
                    b.Property<int>("AdditionalsAdditionalId")
                        .HasColumnType("int");

                    b.Property<int>("BillsBillID")
                        .HasColumnType("int");

                    b.HasKey("AdditionalsAdditionalId", "BillsBillID");

                    b.HasIndex("BillsBillID");

                    b.ToTable("AdditionalBill");
                });

            modelBuilder.Entity("Autovermietung.models.Additional", b =>
                {
                    b.Property<int>("AdditionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvailableAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("AdditionalId");

                    b.ToTable("Additionals");
                });

            modelBuilder.Entity("Autovermietung.models.Bill", b =>
                {
                    b.Property<int>("BillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BillID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Autovermietung.models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountSeats")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("HasAirCondition")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SpaceSuitcases")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Autovermietung.models.CarBill", b =>
                {
                    b.Property<int>("CarBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillCarBillId")
                        .HasColumnType("int");

                    b.Property<int?>("BillID")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("CarBillId");

                    b.HasIndex("BillCarBillId");

                    b.HasIndex("BillID");

                    b.HasIndex("CarId");

                    b.ToTable("CarsBill");
                });

            modelBuilder.Entity("Autovermietung.models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StreetNr")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AdditionalBill", b =>
                {
                    b.HasOne("Autovermietung.models.Additional", null)
                        .WithMany()
                        .HasForeignKey("AdditionalsAdditionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autovermietung.models.Bill", null)
                        .WithMany()
                        .HasForeignKey("BillsBillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Autovermietung.models.Bill", b =>
                {
                    b.HasOne("Autovermietung.models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Autovermietung.models.CarBill", b =>
                {
                    b.HasOne("Autovermietung.models.CarBill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillCarBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autovermietung.models.Bill", null)
                        .WithMany("CarBills")
                        .HasForeignKey("BillID");

                    b.HasOne("Autovermietung.models.Car", "Car")
                        .WithMany("CarBills")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Autovermietung.models.Bill", b =>
                {
                    b.Navigation("CarBills");
                });

            modelBuilder.Entity("Autovermietung.models.Car", b =>
                {
                    b.Navigation("CarBills");
                });

            modelBuilder.Entity("Autovermietung.models.Customer", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
